{"version":3,"file":"static/js/76.64c977b0.chunk.js","mappings":"qQACA,EAA+B,2BAA/B,EAAiE,mBAAjE,EAA4F,oB,SCwE5F,EAhEc,WACZ,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAgBA,IAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBF,GAAa,GADG,mBAGKG,EAAAA,EAAAA,IAAUN,GAHf,OAGRF,EAHQ,OAIdC,EAAQD,GAJM,gDAMdS,QAAQC,IAAR,MANc,yBAQdL,GAAa,GARC,4EAAH,qDAWfE,GACD,GAAE,CAACL,IACCF,EAIL,OACE,qBAASW,UAAWC,EAApB,UACGR,GACC,yCAEA,eAAIO,UAAWC,EAAf,SACGZ,EAAKa,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UAC7BC,EAAWH,EAhCZ,kCAiCUA,EACXI,EACJ,OACE,gBAAaR,UAAWC,EAAxB,WACE,gBAAKQ,IAAKF,EAAUG,IAAKL,EAAMM,MAAO,IAAKC,OAAQ,OACnD,4BACE,wBACE,0BAAOP,MAERC,GACC,0BACE,uCACA,gCAAQA,SAGV,0BACE,uCACA,+CAdCH,EAoBZ,OAGHd,EAAKwB,SACL,+FAIP,C,mMCrEDC,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAGCC,EAAiB,mCAAG,sGACRF,EAAAA,GAAAA,IAAA,oCAAuCC,IAD/B,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAM5B,GAAN,uFACRuB,EAAAA,GAAAA,IAAA,iBACDvB,EADC,oBACkBwB,IACjCK,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAM,uCACjB,IALuB,cACpBC,EADoB,yBAMnBA,EAAIN,MANe,2CAAH,sDAWZpB,EAAS,mCAAG,WAAMN,GAAN,uFACLuB,EAAAA,GAAAA,IAAA,iBACNvB,EADM,4BACqBwB,EADrB,oBADK,cACjBQ,EADiB,yBAIhBA,EAAIN,KAAK5B,MAJO,2CAAH,sDASTmC,EAAU,mCAAG,WAAMjC,GAAN,yFACDuB,EAAAA,GAAAA,IAAA,iBAAoBvB,EAApB,4BAA+CwB,IAD9C,uBAChBE,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,sDAOVO,EAAgB,mCAAG,WAAMC,GAAN,uFACZZ,EAAAA,GAAAA,IAAA,gCACSC,EADT,kBACsBW,EADtB,+CADY,cACxBH,EADwB,yBAIvBA,EAAIN,KAAKC,SAJc,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Cast_section\":\"Cast_Cast_section__N5yuP\",\"List\":\"Cast_List__AZLS7\",\"Actor\":\"Cast_Actor__oQYnX\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getActors } from 'services/api';\nimport blankImage from '../../images/no-image_mobile.jpg';\nimport css from './Cast.module.css';\n\n\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500';\n\n const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const cast = await getActors(movieId);\n        setCast(cast);\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n  if (!cast) {\n    return;\n  }\n\n  return (\n    <section className={css.Cast_section}>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <ul className={css.List}>\n          {cast.map(({ id, profile_path, name, character }) => {\n            const imageSRC = profile_path\n              ? IMAGEURL + profile_path\n              : blankImage;\n            return (\n              <li key={id} className={css.Actor}>\n                <img src={imageSRC} alt={name} width={200} height={300} />\n                <div>\n                  <p>\n                    <span>{name}</span>\n                  </p>\n                  {character ? (\n                    <p>\n                      <b>Character:</b>\n                      <span> {character}</span>\n                    </p>\n                  ) : (\n                    <p>\n                      <b>Character:</b>\n                      <span> Unknown</span>\n                    </p>\n                  )}\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {!cast.length && (\n        <p>There is no information about the cast of this film yet. Sorry...</p>\n      )}\n    </section>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '7579e2ae6d1f4a062097f01f8183de29';\n\n//trending movies request\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data.results;\n};\n\n// movie details request\n\nexport const getMovieById = async movieId => {\n  const res = await axios\n    .get(`/movie/${movieId}?api_key=${KEY}`)\n    .catch(error => {\n      throw new Error('Oops... seems like an error occured.');\n    });\n  return res.data;\n};\n\n //cast info request\n\nexport const getActors = async movieId => {\n  const res = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return res.data.cast;\n};\n\n// //reviews request\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return data.results;\n};\n\n // search movies request\n\nexport const getMoviesByQuery = async query => {\n  const res = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return res.data.results;\n};\n"],"names":["useState","cast","setCast","movieId","useParams","isLoading","setIsLoading","useEffect","fetchData","getActors","console","log","className","css","map","id","profile_path","name","character","imageSRC","blankImage","src","alt","width","height","length","axios","KEY","getTrendingMovies","data","results","getMovieById","catch","error","Error","res","getReviews","getMoviesByQuery","query"],"sourceRoot":""}