{"version":3,"file":"static/js/135.56d21f75.chunk.js","mappings":"yOACA,EAA0B,8BAA1B,EAAqE,iCAArE,EAAoH,kCAApH,EAA8J,4BAA9J,EAAqM,+BAArM,EAA4O,4BAA5O,EAAsR,kCAAtR,EAAoU,gCAApU,EAAgX,gC,mBC+EhX,EAtEqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KASA,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaV,GAASW,KAAKH,EAC5B,GAAE,CAACR,IAECO,EAAL,CAIA,IAAQK,EACRL,EADQK,OAAQC,EAChBN,EADgBM,aAAcC,EAC9BP,EAD8BO,aAAcC,EAC5CR,EAD4CQ,YAExCC,EAAWD,EAtBA,mCAsByBA,EAAcE,EAClDC,EAAYC,KAAKC,MAA8B,IAAvBC,OAAOP,GAAuB,IACtDQ,EAAcV,EAAOW,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KACnDC,EAAcd,EAAae,MAAM,EAAG,GAExC,OACE,iCACE,mBAAQC,UAAWC,EAAaC,KAAK,SAASC,QArB7B,WACnB5B,EAASF,EAAS+B,MAAMC,KACzB,EAmBG,sBAGA,iBAAKL,UAAWC,EAAhB,WACE,0BACE,gBACED,UAAWC,EACXK,IAAG,UAAKnB,GACRoB,IAAK7B,EAAM8B,WAGf,4BACE,gBAAIR,UAAWC,EAAf,UAA2BvB,EAAM8B,MAAjC,IAAyCV,GAAW,WAAQA,EAAR,KAApD,QACA,uBAAIT,EAAY,IAAK,2CAAmBA,EAAnB,UACrB,qCACA,eAAGW,UAAWC,EAAd,cAA8BvB,EAAM+B,aACpC,mCACA,cAAGT,UAAWC,EAAd,SAA0BR,GAAe,eAG7C,qBAASO,UAAWC,EAApB,WACE,eAAID,UAAWC,EAAf,qCACA,2BACE,yBACE,SAAC,KAAD,CAAMD,UAAWC,EAAeS,GAAG,OAAON,MAAO/B,EAAS+B,MAA1D,qBAIF,yBACE,SAAC,KAAD,CAAMJ,UAAWC,EAAeS,GAAG,UAAUN,MAAO/B,EAAS+B,MAA7D,8BAON,SAAC,EAAAO,SAAD,WACE,SAAC,KAAD,QAhDL,CAoDF,C,mMC5EDC,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAGCC,EAAiB,mCAAG,sGACRF,EAAAA,GAAAA,IAAA,oCAAuCC,IAD/B,uBACvBE,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAOjBnC,EAAY,mCAAG,WAAMV,GAAN,uFACRyC,EAAAA,GAAAA,IAAA,iBACDzC,EADC,oBACkB0C,IACjCI,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAM,uCACjB,IALuB,cACpBC,EADoB,yBAMnBA,EAAIL,MANe,2CAAH,sDAWZM,EAAS,mCAAG,WAAMlD,GAAN,uFACLyC,EAAAA,GAAAA,IAAA,iBACNzC,EADM,4BACqB0C,EADrB,oBADK,cACjBO,EADiB,yBAIhBA,EAAIL,KAAKO,MAJO,2CAAH,sDASTC,EAAU,mCAAG,WAAMpD,GAAN,yFACDyC,EAAAA,GAAAA,IAAA,iBAAoBzC,EAApB,4BAA+C0C,IAD9C,uBAChBE,EADgB,EAChBA,KADgB,kBAEjBA,EAAKC,SAFY,2CAAH,sDAOVQ,EAAgB,mCAAG,WAAMC,GAAN,uFACZb,EAAAA,GAAAA,IAAA,gCACSC,EADT,kBACsBY,EADtB,+CADY,cACxBL,EADwB,yBAIvBA,EAAIL,KAAKC,SAJc,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Go_back\":\"MovieDetails_Go_back__p62f8\",\"Movie_card\":\"MovieDetails_Movie_card__xJ2UQ\",\"Movie_image\":\"MovieDetails_Movie_image__2C1JT\",\"Title\":\"MovieDetails_Title__dmr4s\",\"Overview\":\"MovieDetails_Overview__+e3uD\",\"Genre\":\"MovieDetails_Genre__y6deY\",\"Add_section\":\"MovieDetails_Add_section__CPqQf\",\"Add_title\":\"MovieDetails_Add_title__RaR5x\",\"Info_link\":\"MovieDetails_Info_link__hxAHx\"};","import { useParams, Outlet, Link } from 'react-router-dom';\nimport { getMovieById } from 'services/api';\nimport { useEffect, useState, Suspense } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport blankImage from '../../images/no-image_mobile.jpg';\n\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500/';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [movie, setMovie] = useState(null);\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  useEffect(() => {\n    getMovieById(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const { genres, release_date, vote_average, poster_path } =\n  movie;\nconst imageSRC = poster_path ? IMAGEURL + poster_path : blankImage;\nconst userScore = Math.round((Number(vote_average) * 100) / 10);\nconst movieGenres = genres.map(genre => genre.name).join(' ');\nconst releaseDate = release_date.slice(0, 4);\n\n  return (\n    <>\n      <button className={css.Go_back} type=\"button\" onClick={handleGoBack}>\n        Go back\n      </button>\n      <div className={css.Movie_card}>\n        <div>\n          <img\n            className={css.Movie_image}\n            src={`${imageSRC}`}\n            alt={movie.title}\n          />\n        </div>\n        <div>\n          <h2 className={css.Title}>{movie.title} {releaseDate && `(${releaseDate})`} </h2>\n          <p>{userScore > 0 && <span>User Score: {userScore}%</span>}</p>\n          <b>Overview</b>\n          <p className={css.Overview}> {movie.overview}</p>\n          <b>Genres</b>\n          <p className={css.Genre}>{movieGenres || ' - '}</p>\n        </div>\n      </div>\n      <section className={css.Add_section}>\n        <h3 className={css.Add_title}>Additional information</h3>\n        <ul>\n          <li>\n            <Link className={css.Info_link} to=\"cast\" state={location.state}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link className={css.Info_link} to=\"reviews\" state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </section>\n\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '7579e2ae6d1f4a062097f01f8183de29';\n\n//trending movies request\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data.results;\n};\n\n// movie details request\n\nexport const getMovieById = async movieId => {\n  const res = await axios\n    .get(`/movie/${movieId}?api_key=${KEY}`)\n    .catch(error => {\n      throw new Error('Oops... seems like an error occured.');\n    });\n  return res.data;\n};\n\n //cast info request\n\nexport const getActors = async movieId => {\n  const res = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return res.data.cast;\n};\n\n// //reviews request\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return data.results;\n};\n\n // search movies request\n\nexport const getMoviesByQuery = async query => {\n  const res = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return res.data.results;\n};\n"],"names":["movieId","useParams","location","useLocation","navigate","useNavigate","useState","movie","setMovie","useEffect","getMovieById","then","genres","release_date","vote_average","poster_path","imageSRC","blankImage","userScore","Math","round","Number","movieGenres","map","genre","name","join","releaseDate","slice","className","css","type","onClick","state","from","src","alt","title","overview","to","Suspense","axios","KEY","getTrendingMovies","data","results","catch","error","Error","res","getActors","cast","getReviews","getMoviesByQuery","query"],"sourceRoot":""}