{"version":3,"file":"static/js/72.6e375082.chunk.js","mappings":"oQA6BA,EAvBoB,WAClB,OAA0BA,EAAAA,EAAAA,UAAS,OAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMA,OACE,SAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,MAAO,QAAlB,UACE,UAACC,EAAA,EAAD,CACEL,MAAOA,EACPM,SARe,SAACC,EAAOC,GAC3BP,EAASO,EACV,EAOKC,UAAU,YACVC,eAAe,YACf,aAAW,yBALb,WAOE,SAACC,EAAA,EAAD,CAAKX,MAAM,MAAMY,MAAM,OAAOC,UAAWC,EAAAA,GAASC,GAAG,OACrD,SAACJ,EAAA,EAAD,CAAKX,MAAM,MAAMY,MAAM,SAASC,UAAWC,EAAAA,GAASC,GAAG,gBAI9D,ECTD,EAbqB,WACnB,OACE,kCACE,6BACA,SAAC,EAAD,OAEA,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/Navigation/Navigation.jsx","components/SharedLayout/SharedLayout.jsx"],"sourcesContent":["import Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport { useState } from 'react';\nimport { NavLink } from \"react-router-dom\";\n\n const Navigation = () => {\n  const [value, setValue] = useState('one');\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Box sx={{ width: '100%' }}>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        textColor=\"secondary\"\n        indicatorColor=\"secondary\"\n        aria-label=\"secondary tabs example\"\n      >\n        <Tab value=\"one\" label=\"Home\" component={NavLink} to='/' />\n        <Tab value=\"two\" label=\"Movies\" component={NavLink} to='/movies' />\n      </Tabs>\n    </Box>\n  );\n}\n\nexport default Navigation;","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport Navigation from '../Navigation/Navigation'\n\n\nconst SharedLayout = () => {\n  return (\n    <container>\n      <header>\n      <Navigation />\n      </header>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </container>\n  );\n};\n\nexport default SharedLayout;"],"names":["useState","value","setValue","Box","sx","width","Tabs","onChange","event","newValue","textColor","indicatorColor","Tab","label","component","NavLink","to","Suspense","fallback"],"sourceRoot":""}