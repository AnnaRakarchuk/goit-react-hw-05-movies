{"version":3,"file":"static/js/168.dd5f0f74.chunk.js","mappings":"4PACA,EAA0B,yBAA1B,EAA+D,2BAA/D,EAAwG,6B,SCkDxG,EA7CiB,WACb,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAkBE,OAhBFC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBF,GAAa,GADG,mBAGKG,EAAAA,EAAAA,IAAWN,GAHhB,OAGRO,EAHQ,OAIdR,EAAWQ,GAJG,gDAMdC,QAAQC,IAAR,KAAe,4BAND,yBAQdN,GAAa,GARC,4EAAH,qDAWfE,GACD,GAAE,CAACL,KAIE,qBAASU,UAAWC,EAApB,UACDT,GACC,yCAEA,8BACGJ,EAAQc,OAAS,GAChBd,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,gBAAcN,UAAWC,EAAzB,UACE,gBAAaD,UAAWC,EAAxB,WACE,wBACE,oCAAYI,QAEd,6BAAKC,EAAL,SAJOF,IADDA,EADA,OAYhBhB,EAAQc,SAAU,qEAGzB,C,mMC/CDK,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAGCC,EAAiB,mCAAG,sGACRF,EAAAA,GAAAA,IAAA,oCAAuCC,IAD/B,uBACvBX,EADuB,EACvBA,KADuB,kBAExBA,EAAKa,SAFmB,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMrB,GAAN,uFACRiB,EAAAA,GAAAA,IAAA,iBACDjB,EADC,oBACkBkB,IACjCI,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAM,uCACjB,IALuB,cACpBC,EADoB,yBAMnBA,EAAIlB,MANe,2CAAH,sDAWZmB,EAAS,mCAAG,WAAM1B,GAAN,uFACLiB,EAAAA,GAAAA,IAAA,iBACNjB,EADM,4BACqBkB,EADrB,oBADK,cACjBO,EADiB,yBAIhBA,EAAIlB,KAAKoB,MAJO,2CAAH,sDASTrB,EAAU,mCAAG,WAAMN,GAAN,yFACDiB,EAAAA,GAAAA,IAAA,iBAAoBjB,EAApB,4BAA+CkB,IAD9C,uBAChBX,EADgB,EAChBA,KADgB,kBAEjBA,EAAKa,SAFY,2CAAH,sDAOVQ,EAAgB,mCAAG,WAAMC,GAAN,uFACZZ,EAAAA,GAAAA,IAAA,gCACSC,EADT,kBACsBW,EADtB,+CADY,cACxBJ,EADwB,yBAIvBA,EAAIlB,KAAKa,SAJc,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Section\":\"Reviews_Section__c2TxY\",\"Container\":\"Reviews_Container__jQEDF\",\"Information\":\"Reviews_Information__FdT4k\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {getReviews} from 'services/api';\nimport css from './Reviews.module.css'\n\n\n const Reviews = () =>{\n    const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const data = await getReviews(movieId);\n        setReviews(data);\n      } catch (e) {\n        console.log(e, 'There has been a mistake');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n\n    return (\n        <section className={css.Section}>\n      {isLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          {reviews.length > 0 &&\n            reviews.map(({ id, author, content }) => (\n              <div key={id} className={css.Container}>\n                <li key={id} className={css.Information}>\n                  <p>\n                    <b>Author: {author}</b>\n                  </p>\n                  <p>\"{content}\"</p>\n                </li>\n              </div>\n            ))}\n        </>\n      )}\n      {!reviews.length && <p>There are no reviews for this film yet.</p>}\n    </section>\n    )\n}\n\nexport default Reviews;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '7579e2ae6d1f4a062097f01f8183de29';\n\n//trending movies request\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  return data.results;\n};\n\n// movie details request\n\nexport const getMovieById = async movieId => {\n  const res = await axios\n    .get(`/movie/${movieId}?api_key=${KEY}`)\n    .catch(error => {\n      throw new Error('Oops... seems like an error occured.');\n    });\n  return res.data;\n};\n\n //cast info request\n\nexport const getActors = async movieId => {\n  const res = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  return res.data.cast;\n};\n\n// //reviews request\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  return data.results;\n};\n\n // search movies request\n\nexport const getMoviesByQuery = async query => {\n  const res = await axios.get(\n    `/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return res.data.results;\n};\n"],"names":["useState","reviews","setReviews","movieId","useParams","isLoading","setIsLoading","useEffect","fetchData","getReviews","data","console","log","className","css","length","map","id","author","content","axios","KEY","getTrendingMovies","results","getMovieById","catch","error","Error","res","getActors","cast","getMoviesByQuery","query"],"sourceRoot":""}